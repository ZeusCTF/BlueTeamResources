In general terms, a Windows domain is a collection of users and computers under the administration of a given entity.  The idea is to centralize common administrative tasks under an "Active Directory".
A server that runs Active Directory services is known as a Domain Controller.  These services offered come with many benefits, namely:
Centralised identity management, and an easier method of setting security policies across an organization.

User objects in a domain are considered "security principles", meaning they can be assigned access rights over resources on the network (such as files/printers).
Traditionally, users are accounts that an individual employee may access, though user accounts also include service accounts such as those necessary for database services.

Machines are another type of object within Active Directory, with a machine object being created whenever a new computer joins the domain.
Similar to user accounts, machines are considered "security principals" and are assigned an account just as any regular user.
To note, this account is limited on the overall domain, but isi often the local administrator for the assigned computer.

Security Groups are also considered security principals, and can be assigned privileges that are inherited by its members.
For example, say a group is given read access to a folder, if Bob is made a member of that group, he will inherit the read permission given to the group.
Worth noting, groups can have both users and machines as members, as well as other groups.
(AD also allows you to delegate control of an OU to a specific group/user)

Several groups are created by default in a domain, and can automatically granted to users.
Some of these include:
Domain Admins
Server Operators
Backup Operators
Domain Users

Organizational Units are container objects that allow you to classify users and machines.  These are mainly used to define sets of users.

By default, Windows creates a few default containers:
Builtin
Computers
Domain Controllers
Users
Managed Service Accounts

The primary difference between OUs and Security Groups is that OUs are typically used for appplying policies to users and computers, with security groups being used more to grant permissions to resources.
(When managing OUs, Windows has a built-in method of preventing OUs from being deleted, which can be turned off by navigating to the objects properties > Object > unchecking the "protect object from accidental deletion" category.)

By default, all machines that join a domain (except for domain controllers) will be put in a container called "Computers".
(Typically you will create OUs to further seperate these computers, such as a Servers group, Workstation group, and so forth.

In order to actually apply different settings to an OU, Windows uses Group Policy Objects.  These are essentially policies aimed at either users or computers that can set a specific baseline for those accounts.
To configure GPOs, you will typically use the "Group Policy Management" tool that is installed by default.

The first step in creating a new GPO, is to create one under the "Group Policy Objects section, then you can link it to where the policies should be applied
An important note is that an OU will by default be applied to the linked OU, and any sub-OUs under it.

When examining a policy, the "Scope" tab shows where the GPO is linked in the AD domain.
For more granular control, there is a similar setting here called "Security Filtering" that can allow OUs to only be applied to specific users/groups.

The settings tab has the actual contents of the GPO, and lets us know what specific configurations it applies.

GPOs are distributed across the network via a network share called "SYSVOL", which is stored on the DC.
Users within the domain should have access to this share so they can sync their GPOs periodically.

Any changes to GPOs can take awhile to sync, but you can force the sync with a "gpupdate /force"

When using Windows domains, all credentials are stored in the Domain Controllers.
In order to authenticate to a service using domain credentials, two protocols are typically used.
1) Kerberos - Used by recent versions of Windows, typically the default protocol.
2) NetNTLM - Legacy protocol used mainly for compatibility.

Kerberos will assign authenticated users "tickets", which the users can then present to services to demonstarate they are authenticated.

When Kerberos is used for authentication, the following happens:
1.) The user sends their username and a timestamp encrypted using a key derived from their password to the "Key Distribution Center' (KDC), which is responsible for creating Kerberos tickets on the network.
The KDC will then create and send back a "Ticket Granting Ticket" (TGT) which will allow the user to request additional tickets to access specific services.  Along with the TGT, a "Session Key" is given.

2.) When a user wants to connect to a service on the network like a share, wesbite or database, they use their TGT to ask the KDC for a "Ticket Granting Service" (TGS).
These are tickets that allow a connection only to the specific service they were created for..
To request a TGS, the user will send their username and a timestamp encrypted using the Session Key, along with the TGT and a "Service Principal Name" (SPN), indicating the service and server name inteded to access.
As a result of the above, the KDC will send a TGS along with a "Service Session Key", which is needed to authenticate to the service.  
The TGS is encrypted using a key derived from the Service Owner Hash, which is the user or machine account that the service runs under.
(The TGS contains a copy of the Service Session Key on its encrypted contents so that the Service Owner can access it by decrypting the TGS)

3.) The TGS can then be sent to the desired service to authenticate and establish a connection.
The service will use its configured account's password hash to decrypt the TGS, and validate the Service Session Key



NetNTLM on the other hand works using a challenge-response mechanism.
1 - Client sends an auth request to the server they want to access
2 - The server generates a random number and sends it as a challenge to the client
3 - The client combines their NTLM has with the challenge to generate a response to the challenge and sends it back to the server for verification
4 - The server forwards the challenge and the response to the Domain Controller for verification
5 - The domain controller uses the challenge to recalculate the response and compares it to the original response sent by the client, if they match, the client is authed. (the auth result is sent back to the server)
6 - The server forwards the authentication result to the client



If you have multiple domains that share the same namespace, those domains can be joined into a Tree.
If the theoretical domain "thm.local" was split into two subdomains for different organizational branches, you can have one tree with a root domain of "thm.local" and two subdomains called "sub1.thm.local" and "sub2.thm.local"
One consideration to make when talking about trees and forests, is that the "Enterprise Admins" group will grant a user admin privileges over all of an enterprises domains.
For instance, every domain will still have its respective domain admins, however the enterprise admins have the same relative control in addition to the same level of control in all other domains.

The domains managed can also be configured in different namespaces.  For instance, if one company aquires another and merges, there will likely be different domain trees for each company.
The union of several trees with different namespaces into the same network is known as a forest.

Domains arranged in trees and forests are joined together by trust relationships.
Essentially, having a trust relationship between domains allows you to authorize a user from one domain to access resources from another.

The simplest trust relationship is a "one-way", where if domain A trusts domain B, a user on domain B can be authorized to access resources on A.
(The direction of the one-way trust is contrary to that of access direction)

Two-way trusts allow both domains to mutually authorize users from the other to access resources (this is the default relationship formed)
---------------


Hardening AD
----------------
The domain acts as a core unit regarding the logical structure of the Active Directory.  It initially stores all the critical information about the objects that belong to the domain only.
A Domain Controller is an AD server that acts as the brain for a Windows server domain, essentially supervising the entire network.

Trees and Forests are the two most critical concepts within AD.
Trees are responsible for sharing resources between the domains, with the communication between domains inside a tree typically being either a one-way or tow-way trust.
When a domain is added to that tree, it becomes the Offspring domain of that particular domain to which it is added, now a parent domain

When the sharing of the standard global catalogue, directory schema, logical structure, and directory configuration between the collections of trees is made successfully, it is called a Forest.  
With communication between two forests becoming possible once a forest-level trust is created.

AD trust is the established communication bridge between the domains in Active Directory.
One domain's resources are not directly available to every other domain, only those that it trusts - essentially meaning resource sharing is goverend by Trusts in AD.
In general there are two categories for trust types, trusts based either upon characteristics (transitive and non-transitive), or trust based on direction (one-way, or two-way)

You can access the AD trust by navigating to Server Manager > Tools > Active Directory Domains and Trust

The user account password for Windows isn't stored in cleaer text; instead, it stores passwords with two types of hash representation.
When the password for any user account is changed or set with fewer than 15 characters, both LM hash and NT hash are generated by Windows and can be stored in AD.
The LM hash is however relatively weaker than the NT and is prone to a fast brute-force attack.

SMB (Server Message Block) is generally used in microsoft-based networks for file and print communication.
Moreover, it allows for secure transmission over the network.
Configuration for SMB through group policy is crucial for administrators to detect MiTM attacks.
Typically this is done through SMB signing, which ensures the integrity of data for both clients and the server.

LDAP (Light Weight Directory Access Protocol) enables locating and authenticating resources on the network.
Hackers may introduce replay or MiTM attacks to launch custom LDAP requests, which means LDAP signing only accepts signed LDAP requests and ignores all others.  (enabled through group policy)

Active Directory password security is critical to address beacuse of security breaches and password reuse.
Password policies are managed through group policy:
Group Policy Management Editor > Computer Configuration > Policies > Windows Settings > Security Settings > Account Policies > Password Policy

In a typical environment, organizations will choose to implement a "least-privilege" approach to access.
These means that organizations will commonly setup the following types of accounts:
User Accounts
Privileged Accounts
Shared Accounts (these have limited use-cases)

An alternative approach is to use a tiered access model, which is composed of numerous technical controls that reduce the privilege escalation risks.
This model consists of a logical structure of AD that separates AD's assets by creating boundaries for security purposes.  (with the primary goal being to protect tier 0 assets)





